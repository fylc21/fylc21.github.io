<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>判断回文数的两种思路.md</title>
    <link href="/2023/02/09/%E5%88%A4%E6%96%AD%E5%9B%9E%E6%96%87%E6%95%B0%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%80%9D%E8%B7%AF-md/"/>
    <url>/2023/02/09/%E5%88%A4%E6%96%AD%E5%9B%9E%E6%96%87%E6%95%B0%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%80%9D%E8%B7%AF-md/</url>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>回文数指的是一个前后颠倒后依然和原本的值相等的数字。例如，121就是一个回文数，1234321也同样是一个回文数。</p><p>回文数不能是负数，例如-123就不是一个回文数。</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>这里记录两种解题思路。</p><p>第一种是将要判断的数字变成一个字符串，然后切割成一个数组，将数组反转后逐一和变成字符串的数字进行比较，如果比较结果全部相同，就是回文数，否则则不是。</p><p>第二种可以理解为是第一种的升级版，把数字变成字符串后反转再变成字符串和原本的字符串进行比较，如果相同则是回文数，否则不是回文数。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><strong>写法1</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">isPalindrome1</span> = (<span class="hljs-params">x</span>) =&gt; &#123;<br>  <span class="hljs-keyword">let</span> s = <span class="hljs-title class_">String</span>(x);<br>  <span class="hljs-keyword">let</span> len = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(s.<span class="hljs-property">length</span> / <span class="hljs-number">2</span>);<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>    <span class="hljs-keyword">let</span> arr = s.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">reverse</span>();<br>    <span class="hljs-keyword">if</span> (arr[i] !== s[i]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><p><strong>写法2</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> isPalindrome2 = <span class="hljs-keyword">function</span> (<span class="hljs-params">x</span>) &#123;<br>  <span class="hljs-keyword">if</span> (x &lt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    x = x.<span class="hljs-title function_">toString</span>().<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">if</span> (x.<span class="hljs-title function_">toString</span>() === x.<span class="hljs-title function_">reverse</span>().<span class="hljs-title function_">toString</span>()) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>访问测试.md</title>
    <link href="/2023/02/07/%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95-md/"/>
    <url>/2023/02/07/%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95-md/</url>
    
    <content type="html"><![CDATA[<p>这是一篇用来测试访问速度的文章。</p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>html入门.md</title>
    <link href="/2023/02/07/html%E5%85%A5%E9%97%A8-md/"/>
    <url>/2023/02/07/html%E5%85%A5%E9%97%A8-md/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章</p>]]></content>
    
    
    <categories>
      
      <category>前端基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
